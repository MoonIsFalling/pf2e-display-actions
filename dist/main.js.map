{"version":3,"file":"main.js","sources":["../src/ts/constants.ts","../src/ts/apps/selectiveShow.ts","../src/ts/apps/displayActions.ts","../src/ts/utils.ts","../src/ts/settings.ts","../src/ts/module.ts"],"sourcesContent":["import {id} from '../module.json';\r\nimport {ConditionModifierDictionary} from './types';\r\n\r\nexport const moduleId = id;\r\nexport const moduleName = 'DisplayActions2e';\r\nexport const socketEvent = `module.${moduleId}`;\r\nexport const condtionModifierTable: ConditionModifierDictionary = {\r\n  slowed: -1,\r\n  quickened: 1,\r\n  stunned: -1,\r\n};\r\n","/* original by FVTT-SelectiveShow */\r\n\r\nimport {moduleId, socketEvent} from '../constants';\r\nimport {DisplayActions2eData, EmitData} from '../types';\r\nimport {handleSendToChat} from '../utils';\r\n\r\nexport class SelectiveShowApp extends FormApplication {\r\n  private userNameList: string[];\r\n  private displayActionState: DisplayActions2eData;\r\n\r\n  constructor(users: string[], state: DisplayActions2eData) {\r\n    super(users);\r\n    this.userNameList = users;\r\n    this.displayActionState = state;\r\n  }\r\n\r\n  static override get defaultOptions() {\r\n    const options = super.defaultOptions;\r\n    options.id = 'DisplayActions2e-selective-show';\r\n    options.template = `modules/${moduleId}/templates/selectiveshow.html`;\r\n    options.classes?.push('selective-show');\r\n    options.height = 265;\r\n    options.width = 200;\r\n    options.minimizable = true;\r\n    options.resizable = true;\r\n    options.title = game.i18n.localize('selectiveshow.SelectiveShow');\r\n    return options;\r\n  }\r\n\r\n  override async getData() {\r\n    let data = await super.getData();\r\n    // 👇️ ts-ignore ignores any ts errors on the next line\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    data.users = game.users.filter(u => u.active && u.data.id != game.user.id);\r\n    return data;\r\n  }\r\n\r\n  override activateListeners(html: JQuery<HTMLElement>) {\r\n    super.activateListeners(html);\r\n\r\n    html.find('.show').click(ev => {\r\n      ev.preventDefault();\r\n      this._updateObject();\r\n      // let selector = $(ev.currentTarget).parents('form').find('select');\r\n      game.socket?.emit(socketEvent, {\r\n        operation: 'showToSelection',\r\n        state: this.displayActionState,\r\n        user: game.userId,\r\n        userList: this.userNameList,\r\n      } as EmitData);\r\n      this.close();\r\n    });\r\n    html.find('.show-all').click(ev => {\r\n      ev.preventDefault();\r\n      this._updateObject();\r\n\r\n      game.socket?.emit(socketEvent, {\r\n        operation: 'showToAll',\r\n        state: this.displayActionState,\r\n        user: game.userId,\r\n      } as EmitData);\r\n\r\n      this.close();\r\n    });\r\n\r\n    html.find('.show-permissions').click(ev => {\r\n      ev.preventDefault();\r\n      this._updateObject();\r\n\r\n      this.displayActionState.userListPermissions = this.userNameList;\r\n\r\n      game.socket?.emit(socketEvent, {\r\n        operation: 'showWithPermission',\r\n        state: this.displayActionState,\r\n        user: game.userId,\r\n        userList: this.userNameList,\r\n      } as EmitData);\r\n\r\n      this.close();\r\n    });\r\n\r\n    html.find('.send-to-chat').click(ev => {\r\n      ev.preventDefault();\r\n      this._updateObject();\r\n\r\n      handleSendToChat({\r\n        operation: 'sendToChat',\r\n        state: this.displayActionState,\r\n        user: game.userId,\r\n      });\r\n\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  protected override _updateObject(): Promise<unknown> {\r\n    let selector = Array.from(\r\n      document.getElementsByClassName('selective-show-form')[0].children[0].children[0].children[0].children,\r\n    ) as HTMLOptionElement[];\r\n    this.userNameList = selector.map((element: HTMLOptionElement) => {\r\n      if (element.selected) {\r\n        return element.value;\r\n      }\r\n      return '';\r\n    });\r\n\r\n    // active User Id needs to be send always\r\n    let activeUserId = game.userId;\r\n    if (activeUserId) {\r\n      if (!this.userNameList.includes(activeUserId)) {\r\n        this.userNameList.push(activeUserId);\r\n      }\r\n    }\r\n    return new Promise<unknown>(() => {});\r\n  }\r\n\r\n  _handleShowPlayers(state: DisplayActions2eData) {\r\n    switch (game.settings.get(moduleId, 'DisplayActions2e.Settings.ShowPlayerId')) {\r\n      case 'Normal':\r\n        this.render(true, {focus: false});\r\n        break;\r\n      case 'Chat':\r\n        handleSendToChat({\r\n          operation: 'sendToChat',\r\n          state: this.displayActionState,\r\n          user: game.userId,\r\n        });\r\n        break;\r\n      case 'GM':\r\n      // TODO: Only send to GameMaster\r\n      default:\r\n        break;\r\n    }\r\n    this.displayActionState = state;\r\n  }\r\n}\r\n","import {moduleId, socketEvent} from '../constants';\r\nimport {actionsFromConditions, handleDuplication, handleToken, startTurnUpdate} from '../utils';\r\nimport {DisplayActions2eData, EmitData, MyModule} from '../types';\r\nimport {SelectiveShowApp} from './selectiveShow';\r\nimport {ActorPF2e} from 'foundry-pf2e';\r\n\r\nexport class DisplayActions2e extends Application {\r\n  protected clickString = 'symbolClick';\r\n  protected actionImage = 'systems/pf2e/icons/actions/OneAction.webp';\r\n  protected reactionImage = 'systems/pf2e/icons/actions/Reaction.webp';\r\n  protected defaultNumOfActions = 3;\r\n  protected defaultNumOfReactions = 1;\r\n  protected isLinkedToActor = false;\r\n\r\n  protected state: DisplayActions2eData = {\r\n    numOfActions: this.defaultNumOfActions,\r\n    numOfReactions: this.defaultNumOfReactions,\r\n    classNameListActions: Array.from({length: this.defaultNumOfActions}, () => 'symbol'),\r\n    classNameListReactions: Array.from({length: this.defaultNumOfReactions}, () => 'symbol'),\r\n    sentFromUserId: game.userId,\r\n    userListPermissions: [game.userId],\r\n    actorUuid: undefined,\r\n    isLinkedToToken: this.isLinkedToActor,\r\n    duplicationNr: 0,\r\n  };\r\n\r\n  protected showPlayerHandler: SelectiveShowApp = new SelectiveShowApp([game.user.name], this.state);\r\n\r\n  constructor(newState?: DisplayActions2eData) {\r\n    super();\r\n\r\n    if (newState) {\r\n      this.state = newState;\r\n    }\r\n\r\n    if (game.settings.get(moduleId, 'DisplayActions2e.Settings.UpdateTurnStart') as boolean) {\r\n      Hooks.on('pf2e.startTurn', startTurnUpdate);\r\n    }\r\n  }\r\n\r\n  override get title(): string {\r\n    let title = game.i18n.localize('DisplayActions2e.WindowTitle');\r\n\r\n    if (this.state.isLinkedToToken) {\r\n      title = title.concat(this.getTitleToken());\r\n    }\r\n\r\n    title = title.concat(this.getTitleSentFrom());\r\n    title = title.concat(this.getTitleDuplication());\r\n    return title;\r\n  }\r\n\r\n  static override get defaultOptions(): ApplicationOptions {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'DisplayActions2e',\r\n      template: `modules/${moduleId}/templates/result.hbs`,\r\n      width: 270,\r\n      height: 140,\r\n      resizable: true,\r\n      title: 'DisplayActions2e.WindowTitle',\r\n    }) as ApplicationOptions;\r\n  }\r\n\r\n  override getData() {\r\n    this.updateState();\r\n\r\n    return {\r\n      numOfActions: this.state.numOfActions,\r\n      numOfReactions: this.state.numOfReactions,\r\n      actionImagePayload: this.buildHandlebarPayload(\r\n        this.state.numOfActions,\r\n        {actionImage: this.actionImage},\r\n        this.state.classNameListActions,\r\n      ),\r\n      reactionImagePayload: this.buildHandlebarPayload(\r\n        this.state.numOfReactions,\r\n        {reactionImage: this.reactionImage},\r\n        this.state.classNameListReactions,\r\n      ),\r\n      isLinkedToActor: this.state.isLinkedToToken,\r\n      isLinkActorButtonHidden: !(game.settings.get(moduleId, 'DisplayActions2e.Settings.LinkActorId') as boolean),\r\n    };\r\n  }\r\n\r\n  override activateListeners(html: JQuery<HTMLElement>): void {\r\n    super.activateListeners(html);\r\n    // register events for all users with permission\r\n    if (this.state.userListPermissions.includes(game.userId)) {\r\n      html.find('img.symbol').on('click', this._onClickSymbolImage.bind(this));\r\n      html.find('input.input-counter').on('change', this._onChangeCountNumber.bind(this));\r\n      html.find('button.actorLink').on('click', this._onButtonClickSelectedActors.bind(this));\r\n      html.find('button.actorUpdate').on('click', this._onButtonClickUpdateActors.bind(this));\r\n    }\r\n  }\r\n\r\n  override async close(options?: {force?: boolean}): Promise<void> {\r\n    await super.close(options);\r\n\r\n    let module = game.modules.get(moduleId) as unknown as MyModule;\r\n    const index = module.displayActions2e.indexOf(this, 0);\r\n    if (index > -1) {\r\n      module.displayActions2e.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  protected _onClickSymbolImage(event: Event) {\r\n    event.preventDefault();\r\n    // switch css classes of the images\r\n    const image = event.currentTarget as HTMLImageElement;\r\n    if (image === undefined || image === null) {\r\n      return;\r\n    }\r\n    image.classList.toggle(this.clickString);\r\n    // save the state\r\n    // all id begin with either a or r for action or reaction respectively\r\n    const pos = parseInt(image.id.slice(1));\r\n    switch (image.id.charAt(0)) {\r\n      case 'a':\r\n        this.state.classNameListActions[pos] = image.className;\r\n        break;\r\n      case 'r':\r\n        this.state.classNameListReactions[pos] = image.className;\r\n        break;\r\n      default:\r\n        console.error(`${moduleId} handled Image onClicks wrong.`);\r\n    }\r\n\r\n    this.emitUpdate();\r\n  }\r\n\r\n  /**\r\n   * Helper function to make Payload for Handlebars each loop to pass data\r\n   * @param iterator array size\r\n   */\r\n  protected buildHandlebarPayload(iterator: number, imageObj: any, state: string[]) {\r\n    let payload = [];\r\n    for (let index = 0; index < iterator; index++) {\r\n      payload.push(foundry.utils.mergeObject({number: index, cssClass: state[index]}, imageObj));\r\n    }\r\n    return payload;\r\n  }\r\n\r\n  protected _onChangeCountNumber(event: Event) {\r\n    event.preventDefault();\r\n    const input = event.currentTarget as HTMLInputElement;\r\n    const value = parseInt(input.value);\r\n    if (!isNaN(value)) {\r\n      if (value >= 0) {\r\n        switch (input.id) {\r\n          case 'count-action':\r\n            this.state.numOfActions = value;\r\n            break;\r\n          case 'count-reaction':\r\n            this.state.numOfReactions = value;\r\n            break;\r\n          default:\r\n            console.error(`${moduleId} incorrectly handled number of actions!`);\r\n        }\r\n        this.render(false, {focus: false});\r\n        this.emitUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  protected override _getHeaderButtons(): ApplicationHeaderButton[] {\r\n    const buttons = super._getHeaderButtons();\r\n\r\n    const headerButton: ApplicationHeaderButton = {\r\n      label: 'JOURNAL.ActionShow',\r\n      class: 'share-image',\r\n      icon: 'fas fa-eye',\r\n      onclick: () => this.showPlayerHandler._handleShowPlayers(this.state),\r\n    };\r\n\r\n    const headerButtonDuplication: ApplicationHeaderButton = {\r\n      label: 'DisplayActions2e.Duplication',\r\n      class: 'duplicate-app',\r\n      icon: 'fa fa-clone',\r\n      onclick: () => this._onHeaderDuplication(),\r\n    };\r\n\r\n    if (game.settings.get(moduleId, 'DisplayActions2e.Settings.ShowPlayerId') !== 'Hide') {\r\n      buttons.unshift(headerButton);\r\n    }\r\n    if (game.settings.get(moduleId, 'DisplayActions2e.Settings.DuplicateId') as boolean) {\r\n      buttons.unshift(headerButtonDuplication);\r\n    }\r\n\r\n    return buttons;\r\n  }\r\n\r\n  /**\r\n   * Update internal state based on the size of the arrays\r\n   */\r\n  protected updateState() {\r\n    // case to few state elements\r\n    if (this.state.classNameListActions.length < this.state.numOfActions) {\r\n      const tmp = Array.from(\r\n        {length: this.state.numOfActions - this.state.classNameListActions.length},\r\n        () => 'symbol',\r\n      );\r\n      this.state.classNameListActions = this.state.classNameListActions.concat(tmp);\r\n    }\r\n    // too many elements, we remove the last elements\r\n    else if (this.state.classNameListActions.length > this.state.numOfActions) {\r\n      const cut_value = this.state.classNameListActions.length - this.state.numOfActions;\r\n      this.state.classNameListActions = this.state.classNameListActions.slice(0, cut_value);\r\n    }\r\n\r\n    // other state same cases\r\n\r\n    // case to few state elements\r\n    if (this.state.classNameListReactions.length < this.state.numOfReactions) {\r\n      const tmp = Array.from(\r\n        {length: this.state.numOfReactions - this.state.classNameListReactions.length},\r\n        () => 'symbol',\r\n      );\r\n      this.state.classNameListReactions = this.state.classNameListReactions.concat(tmp);\r\n    }\r\n    // too many elements, we remove the last elements\r\n    else if (this.state.classNameListReactions.length > this.state.numOfReactions) {\r\n      const cut_value = this.state.classNameListReactions.length - this.state.numOfReactions;\r\n      this.state.classNameListReactions = this.state.classNameListReactions.slice(0, cut_value);\r\n    }\r\n  }\r\n\r\n  public emitUpdate() {\r\n    game.socket?.emit(socketEvent, {\r\n      operation: 'update',\r\n      state: this.state,\r\n      user: game.userId,\r\n    } as EmitData);\r\n  }\r\n\r\n  public setState(newState: DisplayActions2eData) {\r\n    this.state = foundry.utils.deepClone(newState);\r\n  }\r\n\r\n  /**\r\n   * returns a clone of the state not a reference\r\n   */\r\n  public getState() {\r\n    return foundry.utils.deepClone(this.state);\r\n  }\r\n\r\n  /**\r\n   * The following functions are only done because transpilation is bullying me and thus i cannot do an child of this class\r\n   */\r\n  private getTitleToken(): string {\r\n    let title = '';\r\n\r\n    let actor = fromUuidSync(this.state.actorUuid as string);\r\n    title = title.concat(' for ', String(actor?.name));\r\n    return title;\r\n  }\r\n\r\n  private getTitleSentFrom(): string {\r\n    if (this.state.sentFromUserId === game.userId) {\r\n      return '';\r\n    }\r\n    let title = ' sent from ';\r\n    let user = game.users.get(this.state.sentFromUserId);\r\n\r\n    return title.concat(user ? user.name : 'unknown User');\r\n  }\r\n\r\n  private getTitleDuplication(): string {\r\n    let title = '';\r\n    if (this.state.duplicationNr > 0) {\r\n      title = title.concat(' (', String(this.state.duplicationNr), ')');\r\n    }\r\n    return title;\r\n  }\r\n\r\n  private _onButtonClickSelectedActors() {\r\n    canvas.tokens.controlled.forEach(token => {\r\n      let newState = foundry.utils.deepClone(this.state);\r\n      newState.isLinkedToToken = true;\r\n      newState.actorUuid = token.actor ? token.actor.uuid : token.document.id;\r\n      newState = this.generateActionsFromConditions(newState);\r\n\r\n      handleToken({\r\n        operation: 'token',\r\n        state: newState,\r\n        user: game.userId,\r\n      } as EmitData);\r\n    });\r\n  }\r\n\r\n  private _onButtonClickUpdateActors() {\r\n    this.state = this.generateActionsFromConditions(this.state);\r\n    this.render(false, {focus: false});\r\n  }\r\n\r\n  private _onHeaderDuplication() {\r\n    let newState = foundry.utils.deepClone(this.state);\r\n\r\n    handleDuplication({\r\n      operation: 'duplication',\r\n      state: newState,\r\n      user: game.userId,\r\n    } as EmitData);\r\n  }\r\n\r\n  private generateActionsFromConditions(oldState: DisplayActions2eData): DisplayActions2eData {\r\n    let newState = foundry.utils.deepClone(oldState);\r\n    // can only generate action if linked to a token\r\n    if (oldState.actorUuid) {\r\n      let actor = fromUuidSync(oldState.actorUuid) as ActorPF2e;\r\n      // let actor = game.actors.tokens[oldState.tokenId!] as ActorPF2e;\r\n\r\n      if (actor) {\r\n        const [numOfActions, numOfReactions] = actionsFromConditions(actor.conditions);\r\n        newState.numOfActions = numOfActions;\r\n        newState.numOfReactions = numOfReactions;\r\n        return newState;\r\n      }\r\n    }\r\n\r\n    newState.numOfActions = 3;\r\n    newState.numOfReactions = 1;\r\n    return newState;\r\n  }\r\n}\r\n","import {ActorConditions, ActorPF2e} from 'foundry-pf2e';\r\nimport {DisplayActions2e} from './apps/displayActions';\r\nimport {moduleId} from './constants';\r\nimport {EmitData, MyModule} from './types';\r\n\r\nexport function handleShowToAll(data: EmitData) {\r\n  const dialog = checkAndBuildApp(data);\r\n  dialog.render(true, {id: `DisplayActions2e${data.user}`, focus: false} as RenderOptions);\r\n}\r\n\r\nexport function handleShowToSelection(data: EmitData) {\r\n  if (data.userList?.includes(String(game.userId))) {\r\n    const dialog = checkAndBuildApp(data);\r\n    dialog.render(true, {id: `DisplayActions2e${data.user}`, focus: false} as RenderOptions);\r\n  }\r\n}\r\n\r\nexport function handleShowWithPermission(data: EmitData) {\r\n  handleShowToSelection(data);\r\n}\r\n\r\nexport function handleUpdate(data: EmitData) {\r\n  let module = game.modules.get(moduleId) as unknown as MyModule;\r\n  let nameInTitle = game.users?.find((user: User) => {\r\n    return user._id === data.state.sentFromUserId;\r\n  })?.name;\r\n\r\n  if (nameInTitle) {\r\n    // There might be more than one, so don't use checkForApp\r\n    for (const app of module.displayActions2e.filter(app => app.getState().actorUuid === data.state.actorUuid)) {\r\n      // check for title OR own application update\r\n      if (app.title.includes(nameInTitle!) || data.state.sentFromUserId === game.userId) {\r\n        app.setState(data.state);\r\n        app.render(true, {id: `DisplayActions2e${data.user}-${data.state.actorUuid}`, focus: false} as RenderOptions);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function handleToken(data: EmitData) {\r\n  const dialog = checkAndBuildApp(data);\r\n  dialog.render(true, {id: `DisplayActions2e${data.state.actorUuid}`, focus: false} as RenderOptions);\r\n}\r\n\r\nexport function handleDuplication(data: EmitData) {\r\n  let newState = foundry.utils.deepClone(data.state);\r\n\r\n  do {\r\n    newState.duplicationNr += 1;\r\n  } while (\r\n    checkForApp({\r\n      operation: data.operation,\r\n      user: data.user,\r\n      state: newState,\r\n      userList: data.userList,\r\n    })\r\n  );\r\n\r\n  const dialog = new DisplayActions2e(newState);\r\n  const module = game.modules.get(moduleId) as unknown as MyModule;\r\n  dialog.render(true, {id: `DisplayActions2e${data.user}${newState.duplicationNr}`, focus: false} as RenderOptions);\r\n  // push into list to wait for updates\r\n  module.displayActions2e.push(dialog);\r\n}\r\n\r\nexport function handleSendToChat(data: EmitData) {\r\n  let app = checkForApp(data);\r\n  if (app) {\r\n    if (app.rendered) {\r\n      // find the actions html, then wrap it to create \"outerHtml\"\r\n      let msg = app.element.find('.window-content').find('.flexbox-actions').wrapAll('<div>').parent();\r\n      ChatMessage.create({\r\n        content: msg.html(),\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * helper function to check if the wanted app already exists in the module\r\n * @param data data from emit\r\n * @returns either found DisplayActions2e or undefined\r\n */\r\nfunction checkForApp(data: EmitData, ignoreUser = false): DisplayActions2e | undefined {\r\n  let module = game.modules.get(moduleId) as unknown as MyModule;\r\n\r\n  let app = module.displayActions2e.find(app => {\r\n    let appState = app.getState();\r\n    let control: boolean = ignoreUser || appState.sentFromUserId === data.state.sentFromUserId;\r\n    control = control && appState.duplicationNr.almostEqual(data.state.duplicationNr);\r\n    control = control && appState.actorUuid === data.state.actorUuid;\r\n    control = control && appState.isLinkedToToken === data.state.isLinkedToToken;\r\n\r\n    return control;\r\n  });\r\n\r\n  return app;\r\n}\r\n\r\n/**\r\n * helper function to return the application from the modules or build a new one\r\n * immediatly pushes a new app into the list of modules\r\n * @param data data from emit\r\n * @returns either found DisplayActions2e or new DisplayActions2e with state\r\n */\r\nfunction checkAndBuildApp(data: EmitData): DisplayActions2e {\r\n  let module = game.modules.get(moduleId) as unknown as MyModule;\r\n  let app = checkForApp(data);\r\n  if (app) {\r\n    return app;\r\n  }\r\n  // push into list to wait for updates\r\n  let newApp: DisplayActions2e = new DisplayActions2e(data.state);\r\n  module.displayActions2e.push(newApp);\r\n  return newApp;\r\n}\r\n\r\nexport function actionsFromConditions(conditions: ActorConditions<ActorPF2e>): [number, number] {\r\n  let numOfActions = 3;\r\n  let numOfReactions = 1;\r\n\r\n  let stun = Number(conditions.stunned ? conditions.stunned.value : null);\r\n  let slowed = Number(conditions.slowed ? conditions.slowed.value : null);\r\n  let quicken = conditions.bySlug('quickened').length >= 1 ? 1 : 0;\r\n\r\n  // if stunned no reactions\r\n  if (stun > 0) {\r\n    numOfReactions = 0;\r\n  }\r\n\r\n  // only the bigger value between stunned and slowed is relevant\r\n  let decrementActions = stun >= slowed ? stun : slowed;\r\n\r\n  numOfActions = numOfActions + quicken - decrementActions;\r\n\r\n  return [numOfActions, numOfReactions];\r\n}\r\n\r\n// @ts-ignore\r\nexport function startTurnUpdate(combatant, encounter, userId) {\r\n  // Find APP for the actor\r\n  const module = game.modules.get(moduleId);\r\n  const actorUuid = combatant.actor.uuid;\r\n  // @ts-ignore\r\n  const app = module.displayActions2e.find(app => {\r\n    const appState = app.getState();\r\n    return appState.actorUuid === actorUuid;\r\n  });\r\n  if (app) {\r\n    app.setState(app.generateActionsFromConditions(app.getState()));\r\n    app.render(false, {focus: false});\r\n    app.emitUpdate();\r\n  }\r\n}\r\n","import {moduleId} from './constants';\r\n\r\nconst settingDuplicateId: SettingRegistration = {\r\n  name: 'DisplayActions2e.Settings.DuplicateSetting',\r\n  hint: 'DisplayActions2e.Settings.DuplicateHint',\r\n  config: true,\r\n  scope: 'client',\r\n  type: Boolean,\r\n  default: false,\r\n};\r\n\r\nconst settingLinkActorId: SettingRegistration = {\r\n  name: 'DisplayActions2e.Settings.LinkActorSetting',\r\n  hint: 'DisplayActions2e.Settings.LinkActorHint',\r\n  config: true,\r\n  scope: 'client',\r\n  type: Boolean,\r\n  default: false,\r\n};\r\n\r\nconst settingShowPlayerId: SettingRegistration = {\r\n  name: 'DisplayActions2e.Settings.ShowPlayerSetting',\r\n  hint: 'DisplayActions2e.Settings.ShowPlayerHint',\r\n  config: true,\r\n  scope: 'client',\r\n  type: String,\r\n  choices: {\r\n    Hide: 'DisplayActions2e.Settings.ShowPlayerChoices.Hide',\r\n    Normal: 'DisplayActions2e.Settings.ShowPlayerChoices.Normal',\r\n    Chat: 'DisplayActions2e.Settings.ShowPlayerChoices.Chat',\r\n    // TODO enable GM: 'DisplayActions2e.Settings.ShowPlayerChoices.GM',\r\n  },\r\n  default: 'Normal',\r\n};\r\n\r\nconst settingUpdateTurnStart: SettingRegistration = {\r\n  name: 'DisplayActions2e.Settings.UpdateTurnStart',\r\n  hint: 'DisplayActions2e.Settings.UpdateTurnStartHint',\r\n  config: true,\r\n  scope: 'client',\r\n  type: Boolean,\r\n  default: false,\r\n};\r\n\r\nexport function settingSetup(): void {\r\n  game.settings.register(moduleId, 'DisplayActions2e.Settings.DuplicateId', settingDuplicateId);\r\n  game.settings.register(moduleId, 'DisplayActions2e.Settings.LinkActorId', settingLinkActorId);\r\n  game.settings.register(moduleId, 'DisplayActions2e.Settings.UpdateTurnStart', settingUpdateTurnStart);\r\n  game.settings.register(moduleId, 'DisplayActions2e.Settings.ShowPlayerId', settingShowPlayerId);\r\n}\r\n","// Do not remove this import. If you do Vite will think your styles are dead\r\n// code and not include them in the build output.\r\nimport '../styles/module.css';\r\nimport {moduleId, socketEvent} from './constants';\r\nimport {EmitData, MyModule} from './types';\r\nimport {handleShowToAll, handleShowToSelection, handleShowWithPermission, handleUpdate} from './utils';\r\nimport {DisplayActions2e} from './apps/displayActions';\r\nimport {settingSetup} from './settings';\r\n\r\nlet module: MyModule;\r\nlet homeDisplayActions: DisplayActions2e;\r\n\r\n// Foundry Hooks\r\nHooks.once('init', () => {\r\n  console.log(`Initializing ${moduleId}`);\r\n});\r\n\r\nHooks.on('getSceneControlButtons', (hudButtons: SceneControl[]) => {\r\n  let hud = hudButtons.find((value: any) => {\r\n    return value.name === 'token';\r\n  });\r\n\r\n  let tool: SceneControlTool = {\r\n    name: 'DisplayActions2e.ButtonName',\r\n    title: 'DisplayActions2e.ButtonHint',\r\n    icon: 'pf2-icon icon-action',\r\n    button: true,\r\n    visible: true,\r\n    onClick: async () => {\r\n      homeDisplayActions.render(true, {focus: false});\r\n      game.socket?.emit('module.DisplayActions2e', {event: 'DisplayActions2e'});\r\n    },\r\n  };\r\n\r\n  hud?.tools?.push(tool);\r\n});\r\n\r\nHooks.on('ready', () => {\r\n  module = game.modules.get(moduleId) as unknown as MyModule;\r\n  settingSetup();\r\n  homeDisplayActions = new DisplayActions2e();\r\n\r\n  module.displayActions2e = [homeDisplayActions];\r\n  // sockets\r\n  game.socket?.on(socketEvent, (data: EmitData) => {\r\n    // all my events\r\n    switch (data.operation) {\r\n      case 'showToAll':\r\n        handleShowToAll(data);\r\n        break;\r\n      case 'showToSelection':\r\n        handleShowToSelection(data);\r\n        break;\r\n      case 'showWithPermission':\r\n        handleShowWithPermission(data);\r\n        break;\r\n      case 'update':\r\n        handleUpdate(data);\r\n        break;\r\n      default:\r\n        console.log(data);\r\n        break;\r\n    }\r\n  });\r\n});\r\n"],"names":["module","app","_a"],"mappings":"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"}